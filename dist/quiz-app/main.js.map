{"version":3,"sources":["./src/environments/environment.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/results/results.component.ts","./src/app/results/results.component.html","./src/app/component-name/component-name.component.ts","./src/app/component-name/component-name.component.html","./src/app/app.component.ts","./src/app/questions/questions.component.ts","./src/app/questions/questions.component.html","./src/app/questions.service.ts","./src/app/app.module.ts","./src/app/quiz.model.ts","./src/app/question-form/question-form.component.ts","./src/app/question-form/question-form.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { QuestionsService } from '../questions.service';\nimport { Quiz } from '../quiz.model';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n  public quiz: Quiz[];\n\n  constructor(public questionService: QuestionsService) {\n    questionService.getQuizzes().subscribe((response) => {\n      this.quiz = response;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}","<p>Welcome to my quiz app!</p>\n\n<div>\n  <mat-card color=\"primary\">\n    <mat-card-title class=\"title\">Quizzes</mat-card-title>\n  </mat-card>\n  <div *ngFor=\"let q of quiz\">\n    <mat-card>\n      <mat-card-title>{{q.label}}</mat-card-title>\n      <mat-card-content>{{q.description}}</mat-card-content>\n      <mat-card-actions>\n        <button mat-raised-button color=\"accent\" class=\"btn btn-primary\">\n          <a routerLink=\"/{{q.name}}\" class=\"btn btn-primary\">Select this quiz</a>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>","import { Component, Input } from '@angular/core';\nimport { Answers } from '../quiz.model';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.scss']\n})\nexport class ResultsComponent {\n  @Input() answers: Answers;\n}\n","<div class=\"results\">\n  <h2>Results</h2>\n  <div class=\"answer\" *ngFor=\"let a of answers.values\" [ngClass]=\"{correct: a.correct}\">\n    {{a.value}}\n  </div>\n  <a routerLink=\"/welcome\" class=\"btn btn-primary\">Choose another quiz</a>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-component-name',\n  templateUrl: './component-name.component.html',\n  styleUrls: ['./component-name.component.scss']\n})\nexport class ComponentNameComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>component-name works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>'\n})\n\nexport class AppComponent {\n  title!: 'quiz-app'\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { switchMap } from 'rxjs/operators';\n\nimport { QuestionsService } from '../questions.service'; // instead of literature.service which is the name I gave, this might be questions.service\nimport { Quiz, Answers, Choice, Question } from '../quiz.model';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.scss']\n})\nexport class QuestionsComponent implements OnInit {\n\n  quiz: Quiz;\n  answers: Answers;\n  questions: Question[];\n  currentQuestionIndex: number;\n\n  public showResults = false;\n\n  // inject both the active route and the questions service\n  constructor(private route: ActivatedRoute, private questionsService: QuestionsService) { }\n\n  ngOnInit() {\n\n    // read from the dynamic route and load the proper quiz data\n    this.questionsService.getQuestions(this.route.snapshot.params.quizId)\n      .subscribe(questions => {\n        // initialize everything\n        this.questions = questions;\n        this.answers = new Answers();\n        this.currentQuestionIndex = 0;\n      });\n  }\n\n  updateChoice(choice: Choice) {\n    this.answers.values[this.currentQuestionIndex] = choice;\n  }\n\n  nextOrViewResults() {\n    if (this.currentQuestionIndex === this.questions.length - 1) {\n      this.showResults = true;\n      return;\n    }\n\n    this.currentQuestionIndex++;\n  }\n\n  reset() {\n    this.quiz = undefined;\n    this.questions = undefined;\n    this.answers = undefined;\n    this.currentQuestionIndex = undefined;\n  }\n\n}","<p>questions works!</p>\n<div *ngIf=\"quiz && !questions\" class=\"spinner-grow text-primary\"></div>\n\n<div class=\"quiz\" *ngIf=\"questions\">\n\n  <div class=\"questions\" *ngIf=\"!showResults\">\n    <app-question-form [question]=\"questions[currentQuestionIndex]\" (onChoiceMade)=\"updateChoice($event)\">\n    </app-question-form>\n\n    <button class=\"btn btn-success\" (click)=\"nextOrViewResults()\"\n      [disabled]=\"!answers.values[currentQuestionIndex]\">{{currentQuestionIndex === questions.length - 1 ? 'View results' : 'Next'}}</button>\n  </div>\n\n  <app-results *ngIf=\"showResults\" [answers]=\"answers\"></app-results>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Quiz, Question } from './quiz.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionsService {\n\n  constructor(private http: HttpClient) { }\n\n  public getQuizzes() {\n    return this.http.get(`./assets/quiz-list.json`).pipe(\n      map((result: any[]) => {\n        return result.map(r => new Quiz(r.label, r.name, r.description, r.fileName));\n      })\n    );\n  }\n\n  public getQuestions(fileName: string) {\n    return this.http.get(`./assets/${fileName}.json`).pipe(\n      map((result: any[]) => {\n        return result.map(r => new Question(r.label, r.choices));\n      })\n    );\n  }\n}","// Entry Point of Angular/Quizz App\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { QuestionFormComponent } from './question-form/question-form.component';\nimport { ResultsComponent } from './results/results.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { QuestionsComponent } from './questions/questions.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { ComponentNameComponent } from './component-name/component-name.component';\n\nconst appRoutes: Routes = [\n  { path: 'welcome', component: WelcomeComponent },\n  { path: ':quizId', component: QuestionsComponent },\n  { path: '', redirectTo: \"welcome\", pathMatch: \"prefix\" },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionFormComponent,\n    ResultsComponent,\n    WelcomeComponent,\n    QuestionsComponent,\n    ComponentNameComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(appRoutes),\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","export class Choice {\n  constructor(public value: string, public correct?: boolean) { }\n}\n\nexport class Question {\n  constructor(public label: string, public choices: Choice[]) { }\n}\n\nexport class Quiz {\n  constructor(public label: string, public name: string, public description: string, public fileName: string) { }\n}\n\nexport class Answers {\n  constructor(public values: Choice[] = []) { }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Question } from '../quiz.model';\n\n@Component({\n  selector: 'app-question-form',\n  templateUrl: './question-form.component.html',\n  styleUrls: ['./question-form.component.scss']\n})\nexport class QuestionFormComponent implements OnInit {\n\n  @Input() question: Question;\n  @Output() onChoiceMade = new EventEmitter<string>();\n\n  public form: FormGroup;\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      choice: new FormControl()\n    });\n\n    this.form.valueChanges.subscribe(this.onChange);\n  }\n\n  onChange = () => {\n    this.onChoiceMade.emit(this.form.value.choice);\n  }\n}","<div class=\"quiz\" *ngIf=\"question\">\n  <h1>{{question.label}}</h1>\n  <form [formGroup]=\"form\">\n    <div class=\"form-group\">\n      <label *ngFor=\"let choice of question.choices\">\n        <input type=\"radio\" [value]=\"choice\" formControlName=\"choice\">\n        <span>{{choice.value}}</span>\n      </label>\n    </div>\n    <!-- <div>\n      <app-results *ngIf=\"showResults\" [answers]=\"answers\"></app-results>\n    </div> -->\n  </form>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}